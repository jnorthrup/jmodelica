<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Installation</title>

  <section xml:id="inst_sec_supported_platforms">
    <title>Supported platforms</title>

    <para>JModelica.org can be installed on Linux, Mac OS X, and Windows (XP,
    Vista, 7) with 32-bit or 64-bit architectures. Most development work is
    carried out on 32-bit Mac OS X , 32 and 64-bit Linux and 32-bit Windows 7,
    so these platforms tend to be best tested.</para>
  </section>

  <section xml:id="inst_sec_prerequisites">
    <title>Prerequisites</title>

    <para>Make sure to install the required software components listed in this
    section before installing JModelica.org.</para>

    <section>
      <title>Java</title>

      <para>It is required to have a Java Runtime Environment (JRE) version 6
      installed on your computer.</para>

      <para><emphasis role="bold">Install a JRE</emphasis></para>

      <procedure>
        <step>
          <para>Get a 32-bit / 64-bit <link
          xlink:href="http://www.java.com/en/download/manual.jsp">JRE</link>
          installer suitable for your platform. For Windows users the 32-bit
          JRE must be installed, even for 64-bit computers.</para>
        </step>

        <step>
          <para>Run the installer and follow the instructions to install the
          JRE on your computer.</para>
        </step>
      </procedure>
    </section>

    <section xml:id="inst_sec_prereq_python">
      <title>Python</title>

      <para>Python 2.7 with the following additional packages are
      required.</para>

      <para><emphasis role="bold">Install Python 2.7</emphasis></para>

      <procedure>
        <step>
          <para>Get a <link
          xlink:href="http://www.python.org/download/releases/">Python
          2.7</link> installer suitable for your platform. Note that for
          Windows users the 32-bit version must be chosen, even for 64-bit
          computers.</para>
        </step>

        <step>
          <para>Install the additional Python packages listed in the tables
          below.<table>
              <title>Required Python packages</title>

              <tgroup cols="3">
                <colspec align="left" colname="col–para" colwidth="2*" />

                <colspec align="left" colname="col–def" colwidth="2*" />

                <colspec align="left" colname="col–descr" colwidth="3*" />

                <thead>
                  <row>
                    <entry align="center">Package</entry>

                    <entry align="center">Recommended version</entry>

                    <entry align="center">Description</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry><link
                    xlink:href="http://sourceforge.net/projects/numpy/files/NumPy/">NumPy</link></entry>

                    <entry>1.6.1</entry>

                    <entry>The fundamental package needed for scientific
                    computing with Python.</entry>
                  </row>

                  <row>
                    <entry><link
                    xlink:href="http://sourceforge.net/projects/scipy/files/scipy/">SciPy</link></entry>

                    <entry>0.9.0</entry>

                    <entry>A library of algorithms and mathematical tools for
                    Python.</entry>
                  </row>

                  <row>
                    <entry><link
                    xlink:href="http://sourceforge.net/projects/matplotlib/files/matplotlib/">matplotlib</link></entry>

                    <entry>1.0.1</entry>

                    <entry>A plotting library for Python, with a MATLAB like
                    interface.</entry>
                  </row>

                  <row>
                    <entry><link
                    xlink:href="http://ipython.org/download.html">IPython</link></entry>

                    <entry>0.11</entry>

                    <entry>An interactive shell for Python with additional
                    shell syntax, code highlighting, tab completion, string
                    completion, and rich history.</entry>
                  </row>
                </tbody>
              </tgroup>
            </table></para>

          <para>IPython has extra dependencies on Windows, in this case these
          extra Python packages must be installed:</para>

          <table>
            <title>IPython dependencies on Windows</title>

            <tgroup cols="3">
              <colspec align="left" colname="col–para" colwidth="2*" />

              <colspec align="left" colname="col–def" colwidth="2*" />

              <colspec align="left" colname="col–descr" colwidth="3*" />

              <thead>
                <row>
                  <entry align="center">Package</entry>

                  <entry align="center">Recommended version</entry>

                  <entry align="center">Description</entry>
                </row>
              </thead>

              <tbody>
                <row>
                  <entry><link
                  xlink:href="http://pypi.python.org/pypi/pyreadline">Pyreadline</link></entry>

                  <entry>1.7</entry>

                  <entry>A Python implmementation of GNU readline.</entry>
                </row>

                <row>
                  <entry><link
                  xlink:href="http://pypi.python.org/pypi/setuptools">setuptools</link></entry>

                  <entry>0.6c11</entry>

                  <entry>A package for downloading, building, installing,
                  upgrading, and uninstalling Python packages.</entry>
                </row>
              </tbody>
            </tgroup>
          </table>

          <para>Please note that the recommended version of a package is not
          always the same as the latest version available. It is the package
          version that JModelica.org has been tested and verified to be
          working with.</para>
        </step>
      </procedure>
    </section>
  </section>

  <section xml:id="inst_sec_binary_dist">
    <title>Binary distribution</title>

    <section>
      <title>Windows</title>

      <para>Pre-built binary distributions for Windows are available in the
      Download section of <link
      xlink:href="www.jmodelica.org">www.jmodelica.org</link>.</para>

      <para>The JModelica.org Windows installer contains a binary distribution
      of JModelica.org built using the JModelica.org-SDK, bundled with
      required third-party software components. The JModelica.org Windows
      installer sets up a pre-configured complete environment with convenient
      start menu shortcuts.</para>

      <section xml:id="inst_subsec_bundles">
        <title>Bundled tools, libraries and Python packages</title>

        <para>The following tools, libraries and Python packages are bundled
        with the binary distribution of JModelica.org.</para>

        <itemizedlist>
          <listitem>
            <para><link xlink:href="http://www.mingw.org">MingGW</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="https://projects.coin-or.org/Ipopt">Ipopt</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://jpype.sourceforge.net">JPype</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://codespeak.net/lxml">lxml</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://readthedocs.org/docs/nose/en/latest/">nose</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://www.wxpython.org">wxPython</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="https://computation.llnl.gov/casc/sundials/main.html">SUNDIALS</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://www.cython.org/">Cython</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://crd.lbl.gov/~xiaoye/SuperLU/">SuperLU</link></para>
          </listitem>

          <listitem>
            <para><link
            xlink:href="http://sourceforge.net/apps/trac/casadi/">Casadi</link></para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Installing JModelica.org with Windows installer</title>

        <para>Make sure that all prerequisite components described in <xref
        linkend="inst_sec_prerequisites" /> are installed before
        continuing.</para>

        <procedure>
          <step>
            <para>Download a <link
            xlink:href="http://www.jmodelica.org/page/12">JModelica.org
            Windows binary installer</link> and save the executable file
            somewhere on your computer.</para>
          </step>

          <step>
            <para>Run the file by double-clicking and selecting "Run" if
            prompted with a security warning. This will launch an installer
            which should be self-explanatory.</para>

            <itemizedlist>
              <listitem>
                <para>In the <emphasis>Choose Components</emphasis> window,
                select which of the bundled Python packages that should be
                installed. Make sure that any package not already installed on
                your computer is checked.</para>
              </listitem>
            </itemizedlist>
          </step>
        </procedure>

        <figure>
          <title>Selecting Python packages in the <emphasis>Choose
          components</emphasis> window.</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="images/Setup_components.png"
                         scalefit="1" width="50%"></imagedata>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>

    <section>
      <title>Linux</title>

      <para>Currently, no pre-built binary distributions are provided for
      Linux.</para>
    </section>

    <section>
      <title>Mac OS X</title>

      <para>Currently, no pre-built binary distributions are provided for Mac
      OS X.</para>
    </section>
  </section>

  <section xml:id="inst_sec_sdk">
    <title>Software Development Kit</title>

    <para>The JModelica.org Software Development Kit (SDK) is a bundle of
    tools needed to build the JModelica.org sources on Windows. The SDK is
    mainly intended for those of you who want to do some developement work on
    the platform. Another reason to work with the SDK is if you want to be
    able to build new versions with the latest code changes. For a well
    documented, tested and stable version of JModelica.org, we refer to our
    binary distribution which is built (for Windows) with every
    release.</para>

    <para>The JModelica.org SDK Windows installer sets up a complete
    pre-configured environment with convenient start menu shortcuts.</para>

    <section xml:id="inst_sec_sdk_prereq">
      <title>Prerequisites</title>

      <para>The Python prerequisites for installing the JModelica.org SDK are
      the same as listed in <xref linkend="inst_sec_prereq_python" />. For
      Java however it is required to have a 32-bit JDK installed, not only a
      32-bit JRE as for the binary installation.</para>

      <para><emphasis role="bold">Install a JDK</emphasis><procedure>
          <step>
            <para>Get a 32-bit <link
            xlink:href="http://java.sun.com/javase/downloads/">JDK</link>.</para>
          </step>

          <step>
            <para>Run the installer and follow the instructions to install the
            JDK on your computer.</para>
          </step>
        </procedure></para>
    </section>

    <section>
      <title>Installing the JModelica.org SDK</title>

      <para>Make sure that the prerequisites listed in <xref
      linkend="inst_sec_sdk_prereq" /> are installed before starting the
      JModelica.org SDK installation.</para>

      <section>
        <title>Bundled tools, libraries and Python packages</title>

        <para>All tools, libraries and Python packages included in the binary
        distribution, see <xref linkend="inst_subsec_bundles" />, are also
        included in the SDK. The SDK also includes a few extra tools:</para>

        <itemizedlist>
          <listitem>
            <para><link xlink:href="http://www.mingw.org">MinGW,
            MSYS</link></para>
          </listitem>

          <listitem>
            <para><link xlink:href="http://www.open.collab.net/">CollabNet
            Subversion Client</link></para>
          </listitem>

          <listitem>
            <para><link xlink:href="http://ant.apache.org">Apache
            Ant</link></para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Step-by-step instructions</title>

        <para><orderedlist>
            <listitem>
              <para>Download the <link
              xlink:href="http://www.jmodelica.org/sdk">JModelica.org
              SDK</link> and save the executable file somewhere on your
              computer.</para>
            </listitem>

            <listitem>
              <para>Run the file by double-clicking and selecting "Run" if
              prompted with a security warning. This will launch an installer
              which should be self-explanatory. Select "Yes" at the end when
              asked if the source code should be checked out from
              JModelica.org as this is needed in the next step.</para>
            </listitem>

            <listitem>
              <para>Build the sources:<orderedlist>
                  <listitem>
                    <para>Start the msys shell from the JModelica.org start
                    menu.</para>
                  </listitem>

                  <listitem>
                    <para>Configure the sources for build and installation
                    (this will create the subdirectories
                    <filename>build</filename> and
                    <filename>install</filename>) with:<programlisting>./configure.sh</programlisting></para>
                  </listitem>

                  <listitem>
                    <para>Compile the sources with <literal>make</literal>
                    from the <filename>build</filename>
                    folder:<programlisting>cd build
make &amp;&amp; make install</programlisting></para>
                  </listitem>
                </orderedlist></para>
            </listitem>

            <listitem>
              <para>Test the installation by starting a Python shell from the
              JModelica.org start menu and running an example. Starting the
              Python session from this start menu will set all the environment
              variables required to run the JModelica.org Python
              interface.<programlisting language="python"># Import the vdp example
from pyjmi.examples import vdp

# Run the vdp example and plot results
vdp.run_demo()</programlisting></para>
            </listitem>
          </orderedlist></para>
      </section>
    </section>

    <section>
      <title>Changing Ipopt solver</title>

      <para>The solver bundled in JModelica.org is Ipopt-MUMPS. However, it is
      possible to use other Ipopt solvers. This requires a few changes in the
      setup and rebuilding JModelica. The procedure is:</para>

      <orderedlist>
        <listitem>
          <para>Open the script file <filename>configure.sh,</filename>
          located in the SDK root folder, in a text editor.</para>
        </listitem>

        <listitem>
          <para>Search for the line <emphasis>--with-ipopt</emphasis> and
          exchange the default Ipopt solver path with the path to the solver
          that you want to use. Save and close.</para>
        </listitem>

        <listitem>
          <para>Do the whole installation procedure again, that is: run
          configure, make and make install.</para>
        </listitem>

        <listitem>
          <para>Open the file <filename>setenv.bat,</filename> which is also
          found in the SDK root folder, in a text editor.</para>
        </listitem>

        <listitem>
          <para>Look for the line which sets the <literal>IPOPT_HOME</literal>
          environment variable and exchange the default path with the path to
          your solver.</para>
        </listitem>
      </orderedlist>
    </section>
  </section>
</chapter>
