<project name="jmodelica_site" default="site" xmlns:a4e="antlib:org.ant4eclipse">
	
	<property name="trunk.project" value="JModelica" />
	<property name="ide.project" value="org.jmodelica.ide" />
	<property name="ide.feature.project" value="org.jmodelica.ide.feature" />
	<property name="outline.project" value="org.jmodelica.ide.outline" />
	<property name="outline.feature.project" value="org.jmodelica.ide.outline.feature" />
	<property name="textual.project" value="org.jmodelica.ide.textual" />
	<property name="textual.feature.project" value="org.jmodelica.ide.textual.feature" />
	<property name="jastadd.project" value="org.jastadd.ed.core" />
	<property name="jastadd.feature.project" value="org.jastadd.ed.core.feature" />
	<property name="graphical.project" value="org.jmodelica.ide.graphical" />
	<property name="graphical.feature.project" value="org.jmodelica.ide.graphical.feature" />
    <property name="documentation.project" value="org.jmodelica.ide.documentation" />
    <property name="documentation.feature.project" value="org.jmodelica.ide.documentation.feature" />
    <property name="devel.project" value="org.jmodelica.devel" />
    <property name="devel.feature.project" value="org.jmodelica.devel.feature" />
	
	<property name="jmodelica_root" value="../${trunk.project}" />
	<property name="jastadd_root" value="../${jastadd.project}" />
	<property name="ide_root" value="../${ide.project}" />
	<property name="graphical_root" value="../${graphical.project}" />
	<property name="documentation_root" value="../${documentation.project}" />
    <property name="devel_root" value="../${devel.project}" />
	
	<property name="outline_root" value="../${outline.project}" />
	<property name="textual_root" value="../${textual.project}" />

	<property name="site_dir" value="site" />
	<property name="bin_dir" value="bin" />
	<property name="output_dir" location="site" />
	
	<!-- TODO! Set to your Eclipse path -->
	<property name="eclipse_path" value="../../../program_files/eclipse" />

	
	<property name="site_file" location="site.xml" />
	
	<path id="plugin_classpath">
		<pathelement location="${ide_root}/lib/beaver-rt.jar" />
<!--		<pathelement location="${jmodelica_root}/ThirdParty/Junit" />-->
		<fileset dir="${eclipse_path}/plugins">
			<include name="**/*.jar" />
			<exclude name="**/org.apache.ant*.jar"/>
		</fileset>
	</path>

	<macrodef name="jm_buildPlugin" description="creates jar for a single plug-in project">
		<attribute name="projectName" />
		<attribute name="path" default="../@{projectName}" />
		<attribute name="revPath" default="@{path}" />

		<sequential>
			<!-- read build.properties -->
			<property file="@{path}/build.properties" prefix="@{projectName}" />

			<!-- copy binary includes -->
			<copy todir="${bin_dir}/bundles/@{projectName}">
				<fileset dir="@{path}" includes="${@{projectName}.bin.includes}">
					<filename name="." negate="true" />
				</fileset>
			</copy>
			
			<!-- get svn revision number -->
			<exec executable="svnversion" outputproperty="jm.@{projectName}.revision">
				<arg value="-c"/>
				<arg value="@{revPath}"/>
			</exec>

			<!-- extract version and id -->
			<taskdef name="pluginVersion" classname="org.jmodelica.ant.ExtractPluginVersion" classpath="${bin_dir}/classes" />
			<pluginVersion plugin="@{projectName}" 
				path="${bin_dir}/bundles/@{projectName}/META-INF/MANIFEST.MF" 
				datadir="${bin_dir}" revision="${jm.@{projectName}.revision}"/>
			<property file="${bin_dir}/plugin.properties" prefix="jm" />

			<!-- build jar -->
			<jar destfile="${bin_dir}/plugins/${jm.@{projectName}.jar}" 
				basedir="${bin_dir}/bundles/@{projectName}" 
				manifest="${bin_dir}/bundles/@{projectName}/META-INF/MANIFEST.MF" />
		</sequential>
	</macrodef>

	<macrodef name="jm_buildFeature" description="creates jar for a single feature project">
		<attribute name="projectName" />

		<sequential>
			<!-- read build.properties -->
			<property file="../@{projectName}/build.properties" prefix="@{projectName}" />

			<!-- copy binary includes -->
			<copy todir="${bin_dir}/bundles/@{projectName}">
				<fileset dir="../@{projectName}" includes="${@{projectName}.bin.includes}">
					<filename name="." negate="true" />
				</fileset>
			</copy>

			<!-- patch the feature.xml -->
			<taskdef name="patchFeature" classname="org.jmodelica.ant.PatchFeature" classpath="${bin_dir}/classes" />
			<patchFeature feature="@{projectName}" 
				path="${bin_dir}/bundles/@{projectName}/feature.xml" 
				datadir="${bin_dir}" />
			<property file="${bin_dir}/feature.properties" prefix="jm" />
			<!-- TODO: automatically set download and installation sizes? -->

			<!-- build jar -->
			<jar destfile="${bin_dir}/features/${jm.@{projectName}.jar}" 
				basedir="${bin_dir}/bundles/@{projectName}" />
		</sequential>
	</macrodef>

	<macrodef name="jm_buildSite" description="builds the update site">
		<attribute name="dir" />
		<attribute name="name" />

		<sequential>
			<!-- update site.xml -->
			<taskdef name="patchSite" classname="org.jmodelica.ant.PatchSite" classpath="${bin_dir}/classes" />
			<patchSite path="@{dir}/site.xml" datadir="${bin_dir}" />

			<!-- build site -->
			<pathconvert property="launcher">
				<path id="launcher.path">
					<fileset dir="${eclipse_path}/plugins">
						<include name="org.eclipse.equinox.launcher_*.jar" />
					</fileset>
				</path>
			</pathconvert>
			<java jar="${launcher}" fork="true" timeout="10800000" taskname="p2" failonerror="false" maxmemory="256m">
				<arg line=" -application org.eclipse.equinox.p2.publisher.UpdateSitePublisher" />
				<arg line=" -metadataRepository file:@{dir}" />
				<arg line=" -artifactRepository file:@{dir}" />
				<arg line=" -source @{dir}/ -configs ANY" />
				<arg line=" -metadataRepositoryName &quot;@{name} plugins&quot;" />
				<arg line=" -artifactRepositoryName &quot;@{name} artifacts&quot;" />
				<arg line=" -publishArtifacts -compress" />
			</java>
		</sequential>
	</macrodef>

	<macrodef name="emptyDir" description="creates or empties directory">
		<attribute name="dir" />
		<sequential>
			<delete dir="@{dir}" quiet="true" />
			<mkdir dir="@{dir}" />
		</sequential>
	</macrodef>

	<!-- remove compiled files -->
	<target name="clean">
		<delete dir="${bin_dir}" />
		<delete dir="${output_dir}" />
	</target>
	
	<target name="gen">
		<!--TODO:Implement call to ide build.. -->
	</target>

	<!-- compile files -->
	<target name="compile" depends="gen">
		<mkdir dir="${bin_dir}/classes" />
		<javac compiler="javac1.5" debug="true" destdir="${bin_dir}/classes">
			<classpath refid="plugin_classpath" />
			<src path="${jastadd_root}/src" />
			<src path="${ide_root}/java" />
			<src path="${ide_root}/ant" />
			<src path="${graphical_root}/src" />
			<src path="${documentation_root}/src" />
            <src path="${devel_root}/src" />
			<src path="${outline_root}/src" />
			<src path="${textual_root}/src" />
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="site" depends="clean,compile">
		<!-- collect class files for org.jastadd.plugin -->
		<copy todir="${bin_dir}/bundles/${jastadd.project}">
			<fileset dir="${bin_dir}/classes">
				<include name="org/jastadd/**/*" />
			</fileset>
		</copy>

		<!-- collect class files for org.jmodelica.ide -->
		<copy todir="${bin_dir}/bundles/${ide.project}">
			<fileset dir="${bin_dir}/classes">
				<include name="org/jmodelica/generated/**" />
				<include name="org/jmodelica/icons/**" />
				<include name="org/jmodelica/ide/**" />
				<include name="org/jmodelica/modelica/**" />
				<include name="org/jmodelica/util/**" />
				<exclude name="org/jmodelica/ide/graphical/**" />
				<exclude name="org/jmodelica/ide/documentation/**" />
                <exclude name="org/jmodelica/devel/**" />
				<exclude name="org/jmodelica/ide/outline/**" />
				<exclude name="org/jmodelica/ide/textual/**" />
			</fileset>
		</copy>

		<!-- collect class files for org.jmodelica.graphical -->
		<copy todir="${bin_dir}/bundles/${graphical.project}">
			<fileset dir="${bin_dir}/classes">
				<include name="org/jmodelica/ide/graphical/**" />
			</fileset>
		</copy>

		<!-- collect class files for org.jmodelica.documentation -->
		<copy todir="${bin_dir}/bundles/${documentation.project}">
			<fileset dir="${bin_dir}/classes">
				<include name="org/jmodelica/ide/documentation/**" />
			</fileset>
		</copy>
			
		<!-- collect class files for org.jmodelica.outline -->
		<copy todir="${bin_dir}/bundles/${outline.project}">
			<fileset dir="${bin_dir}/classes">
				<include name="org/jmodelica/ide/outline/**" />
			</fileset>
		</copy>
		
		<!-- collect class files for org.jmodelica.textual -->
		<copy todir="${bin_dir}/bundles/${textual.project}">
			<fileset dir="${bin_dir}/classes">
				<include name="org/jmodelica/ide/textual/**" />
			</fileset>
		</copy>
					
        <!-- collect class files for org.jmodelica.devel -->
        <copy todir="${bin_dir}/bundles/${devel.project}">
            <fileset dir="${bin_dir}/classes">
                <include name="org/jmodelica/devel/**" />
            </fileset>
        </copy>

		<!-- build jars for plugins -->
		<delete file="${bin_dir}/plugin.versions" quiet="true" />
		<emptyDir dir="${bin_dir}/plugins" />
		<jm_buildPlugin projectName="${jastadd.project}" path="${jastadd_root}" />
		<jm_buildPlugin projectName="${ide.project}" revpath="${jmodelica_root}" />
		<jm_buildPlugin projectName="${graphical.project}" path="${graphical_root}" />
		<jm_buildPlugin projectName="${documentation.project}" path="${documentation_root}" />
        <jm_buildPlugin projectName="${devel.project}" path="${devel_root}" />
		<jm_buildPlugin projectName="${outline.project}" path="${outline_root}" />
		<jm_buildPlugin projectName="${textual.project}" path="${textual_root}" />

		<!-- build jars for features -->
		<emptyDir dir="${bin_dir}/features" />
		<jm_buildFeature projectName="${jastadd.feature.project}" />
		<jm_buildFeature projectName="${ide.feature.project}" />
		<jm_buildFeature projectName="${graphical.feature.project}" />
		<jm_buildFeature projectName="${documentation.feature.project}" />
        <jm_buildFeature projectName="${devel.feature.project}" />
		<jm_buildFeature projectName="${outline.feature.project}" />
		<jm_buildFeature projectName="${textual.feature.project}" />

		<!-- build update site -->
		<emptyDir dir="${output_dir}" />
		<copy todir="${output_dir}">
			<fileset dir="${bin_dir}">
				<include name="plugins/**/*"/>
				<include name="features/**/*"/>
			</fileset>
			<fileset file="${site_file}" />
		</copy>
		<jm_buildSite dir="${output_dir}" name="JModelica.org" />
	</target>
	
</project>