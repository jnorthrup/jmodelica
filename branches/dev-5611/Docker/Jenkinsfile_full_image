node('docker') {
    def jm_image
    stage("Checkout JModelica.org") {
        checkout([
            $class: 'SubversionSCM',
            locations: [
            [local: 'JModelica', remote: scm.getLocations()[0].remote],
        ],
            workspaceUpdater: [$class: 'UpdateWithCleanUpdater'],
            quietOperation: true,
        ])
    }
    try {
        stage ('Build') {
            dir ("JModelica") {
                def dockerfile = 'Dockerfile_full_image'
                jm_image = docker.build("jmodelica-image", "-f ${dockerfile} . --build-arg DOCKER_LINUX_DIST=jmodelica/ubuntu_base --build-arg DOCKER_DIST_TAG=latest --build-arg DOCKER_JM_TESTS_WS=/home/jenkins/internal/workspace/OCTTeam/JM_Ubuntu-Build/JModelica")
            }
        }
    } finally {
        stage ('Testing') {
            dir ("JModelica") {
                jm_image.inside {
                    echo pwd()
                    sh 'pwd && whoami'
                    archiveArtifacts artifacts: '**/*.xml', fingerprint: false
                    junit testResults: '/home/jenkins/jm_install/test_results/*.xml', allowEmptyResults: true
                }
            }
        }
    }
}