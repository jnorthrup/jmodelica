/*
    Copyright (C) 2016 Modelon AB

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3 of the License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


aspect SrcUtil {
    syn boolean Exp.isLiteral()  = false;
    eq BooleanLitExp.isLiteral() = true;
    eq IntegerLitExp.isLiteral() = true;
    eq RealLitExp.isLiteral()    = true;
    eq StringLitExp.isLiteral()  = true;

    /**
     * Returns the class declaration which surrounds this element. Null if no
     * such declaration can be found.
     */
    inh ClassDecl Element.myClassDecl();
    eq ClassDecl.getChild().myClassDecl() = this;
    eq SourceRoot.getChild().myClassDecl() = null;

    /**
     * Returns true if this import is an unqualified import.
     */
    syn boolean ImportClause.isUnqualifiedImport()   = false;
    eq ImportClauseUnqualified.isUnqualifiedImport() = true;

    /**
     * Return true if this import is a renaming import
     */
    syn boolean ImportClause.isRenamingImport() = false;
    eq ImportClauseRename.isRenamingImport()    = true;

    /**
     * Returns the rename string for this import, or null if this import
     * isn't a renaming import.
     */
    syn String ImportClause.renameStringOrNull() = null;
    eq ImportClauseRename.renameStringOrNull() = getIdDecl().name();
}