/*
Copyright (C) 2014 Modelon AB

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

public class ModelicaGenerator extends GenericXMLGenerator {
	
	public static final Creator CREATOR = new Creator() {
		
		public ModelicaGenerator create(Printer p, char escapeChar, FClass fclass) {
			return new ModelicaGenerator(p, escapeChar, fclass);
		}
	};
	
	public ModelicaGenerator(Printer p, char escapeChar, FClass fclass) {
		super(p, escapeChar, fclass);
	}
	
	public class Root_XML extends DAETag {
		
		public Root_XML(AbstractGenerator myGenerator, FClass fclass) {
			super("rootXML", myGenerator, fclass);
		}
	
		public void generate(CodeStream str) {
			fclass.prettyPrintXML(str, "");
		}
	}
	
	public class XMLOptimization extends DAETag {
		
		public XMLOptimization(AbstractGenerator myGenerator, FClass fclass) {
			super("optimizationXML", myGenerator, fclass);
		}
		
		public void generate(CodeStream genPrinter) {
			// abstract method that must be override
		}
	}
	
	/**
	 * Name of the root tag to use if no template is given
	 */
	protected String root() {
		return "rootXML";
	}
}