Index: cvodes/cvodes_direct.c
===================================================================
--- cvodes/cvodes_direct.c	(revision 7324)
+++ cvodes/cvodes_direct.c	(working copy)
@@ -342,6 +342,7 @@
   N_Vector ftemp, jthCol;
   long int j;
   int retval = 0;
+  int forward_diff = 1;
 
   CVodeMem cv_mem;
   CVDlsMem cvdls_mem;
@@ -368,7 +369,7 @@
            (MIN_INC_MULT * ABS(h) * uround * N * fnorm) : ONE;
 
   for (j = 0; j < N; j++) {
-
+    forward_diff = 1;
     /* Generate the jth col of J(tn,y) */
 
     N_VSetArrayPointer(DENSE_COL(Jac,j), jthCol);
@@ -379,7 +380,19 @@
 
     retval = f(t, y, ftemp, user_data);
     nfeDQ++;
-    if (retval != 0) break;
+    if (retval != 0) { /* Forward difference failed, trying backward */
+        forward_diff = 0;
+        
+        y_data[j] = yjsaved;
+        y_data[j] -= inc;
+        
+        retval = f(t, y, ftemp, user_data);
+        nfeDQ++;
+        
+        if (retval != 0) {
+            break;
+        }
+    }
     
     y_data[j] = yjsaved;
 
Index: cvode/cvode_direct.c
===================================================================
--- cvode/cvode_direct.c	(revision 7324)
+++ cvode/cvode_direct.c	(working copy)
@@ -322,6 +322,7 @@
   N_Vector ftemp, jthCol;
   long int j;
   int retval = 0;
+  int forward_diff = 1;
 
   CVodeMem cv_mem;
   CVDlsMem cvdls_mem;
@@ -348,7 +349,7 @@
            (MIN_INC_MULT * ABS(h) * uround * N * fnorm) : ONE;
 
   for (j = 0; j < N; j++) {
-
+    forward_diff = 1;
     /* Generate the jth col of J(tn,y) */
 
     N_VSetArrayPointer(DENSE_COL(Jac,j), jthCol);
@@ -359,12 +360,29 @@
 
     retval = f(t, y, ftemp, user_data);
     nfeDQ++;
-    if (retval != 0) break;
+    if (retval != 0) { /* Forward difference failed, trying backward */
+        forward_diff = 0;
+        
+        y_data[j] = yjsaved;
+        y_data[j] -= inc;
+        
+        retval = f(t, y, ftemp, user_data);
+        nfeDQ++;
+        
+        if (retval != 0) {
+            break;
+        }
+    }
     
     y_data[j] = yjsaved;
 
     inc_inv = ONE/inc;
-    N_VLinearSum(inc_inv, ftemp, -inc_inv, fy, jthCol);
+    
+    if (forward_diff) {
+        N_VLinearSum(inc_inv, ftemp, -inc_inv, fy, jthCol);
+    } else {
+        N_VLinearSum(inc_inv, fy, -inc_inv, ftemp, jthCol);
+    }
 
     DENSE_COL(Jac,j) = N_VGetArrayPointer(jthCol);
   }
