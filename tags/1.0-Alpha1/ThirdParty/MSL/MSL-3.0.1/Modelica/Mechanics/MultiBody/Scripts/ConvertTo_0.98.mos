clear

convertClear();


convertModifiers(
 "MultiBody.Joints.Revolute", {"startValuesFixed=false", "phi_start_fixed=false"},
     {"initType=if %phi_start_fixed% then MultiBody.Types.Init.Position else (if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free)"});

convertModifiers(
 "MultiBody.Joints.ActuatedRevolute", {"startValuesFixed=false", "phi_start_fixed=false"},
     {"initType=if %phi_start_fixed% then MultiBody.Types.Init.Position else (if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free)"});

convertModifiers(
 "MultiBody.Joints.Prismatic", {"startValuesFixed=false", "s_start_fixed=false"},
     {"initType=if %s_start_fixed% then MultiBody.Types.Init.Position else (if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free)"});

convertModifiers(
 "MultiBody.Joints.ActuatedPrismatic", {"startValuesFixed=false", "s_start_fixed=false"},
     {"initType=if %s_start_fixed% then MultiBody.Types.Init.Position else (if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free)"});

convertModifiers(
 "MultiBody.Joints.Cylindrical", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Joints.Universal", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Joints.Planar", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Joints.FreeMotion", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Parts.Body", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Parts.BodyShape", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Parts.BodyBox", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});

convertModifiers(
 "MultiBody.Parts.BodyCylinder", {"startValuesFixed=false"},
     {"initType=if %startValuesFixed% then MultiBody.Types.Init.PositionVelocity else MultiBody.Types.Init.Free"});
