/*
    Copyright (C) 2009 Modelon AB

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3 of the License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

BaseClassDecl base_class_decl =               
  encapsulated? 
  partial? 
  OPTIMIZATION
  id_decl.start 
  class_modification?
  string_comment? 
  composition 
  END_ID.end   {:  String end_s = end.substring(3,end.length());
	                end_s = removeWhitespace(end_s);
                   return new PN_OptClassDecl(new UnknownVisibilityType(),
                                             encapsulated,
                                             partial,
                                             new OptimizationClass(),
                                             start,
                                             new Opt(),
                                             new Opt(),
                                             new Opt(),
                                             new Opt(),
                                             new Opt(),
                                             new Opt(),
                                             new Opt(),
                                             string_comment,
                                             composition,
                                             end_s,
                                             class_modification); :}
;

Clause composition_clause = constraint_clause;

ConstraintClause constraint_clause = 
  CONSTRAINT
  oconstraint_list {: return new ConstraintClause(oconstraint_list); :}
  ;
  
List oconstraint_list =
              {: return new List(); :}
  |oconstraint                           {: return new List().add(oconstraint); :}
  | oconstraint_list oconstraint  {: oconstraint_list.add(oconstraint); 
                                                 return oconstraint_list; :}
   ;  
  
Constraint oconstraint =
  artm_exp.a ASSIGN artm_exp.b SEMICOLON{: return new ConstraintEq(a,b); :}
  |  artm_exp.a LEQ artm_exp.b SEMICOLON{: return new ConstraintLeq(a,b); :}
  |  artm_exp.a GEQ artm_exp.b SEMICOLON{: return new ConstraintGeq(a,b); :}
  ;

  