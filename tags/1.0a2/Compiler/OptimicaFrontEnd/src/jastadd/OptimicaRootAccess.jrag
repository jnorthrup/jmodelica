/*
    Copyright (C) 2009 Modelon AB

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3 of the License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

aspect OptimicaRootAccess {
	
	//refine RootAccess eq Root.parser() = new OptimicaParser();
	
	refine RootAccess SourceRoot ParserHandler.parseFile(String fileName) 
	   throws ParserException, beaver.Parser.Exception, FileNotFoundException, IOException{
		SourceRoot sr = null;
		Reader reader = new FileReader(fileName);
		OptimicaScanner scanner = new OptimicaScanner(new BufferedReader(reader));
		OptimicaParser parser = new OptimicaParser();
		parser.setLineBreakMap(scanner.getLineBreakMap());
		sr = (SourceRoot)parser.parse(scanner);
		sr.setFileName(fileName);
		return sr;
	}

	refine RootAccess SourceRoot ParserHandler.parseString(String str, String fileName)  
	   throws ParserException, beaver.Parser.Exception, FileNotFoundException, IOException{
		SourceRoot sr = null;
		OptimicaScanner scanner = new OptimicaScanner(new StringReader(str));
		OptimicaParser parser = new OptimicaParser();
		parser.setLineBreakMap(scanner.getLineBreakMap());
		sr = (SourceRoot)parser.parse(scanner);
		sr.setFileName(fileName);
		return sr;
	}
	
	refine RootAccess Exp ParserHandler.parseExpString(String str) 
	   throws ParserException, beaver.Parser.Exception, FileNotFoundException, IOException{
		Exp exp = null;
		OptimicaScanner scanner = new OptimicaScanner(new StringReader(str));
		OptimicaParser parser = new OptimicaParser();
		exp = (Exp)parser.parse(scanner,OptimicaParser.AltGoals.exp);
		//System.out.println("OptimicaParser.parseExpString: "+str);
		//exp.dumpTreeBasic("");		
		return exp;
	}
	
}