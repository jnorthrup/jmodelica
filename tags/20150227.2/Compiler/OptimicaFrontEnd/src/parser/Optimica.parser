/*
    Copyright (C) 2009 Modelon AB

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3 of the License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

BaseClassDecl base_class_decl =               
  encapsulated? 
  partial? 
  optimization_restriction
  id_decl.start 
  class_modification?
  string_comment? 
  composition 
  annotation_sc?
  end_decl   {: return new PN_OptClassDecl(
                    start,
                    new UnknownVisibilityType(),
                    encapsulated,
                    partial,
                    optimization_restriction,
                    new Opt(),
                    new Opt(),
                    new Opt(),
                    new Opt(),
                    new Opt(),
                    new Opt(),
                    new Opt(),
                    string_comment,
                    composition,
                    annotation_sc,
                    end_decl,
                    class_modification); :}
;

Clause composition_clause = constraint_clause;

OptimizationClass optimization_restriction =
  OPTIMIZATION   {: return new OptimizationClass(); :}
  ;

ConstraintClause constraint_clause = 
  CONSTRAINT oconstraint*  {: return new ConstraintClause(oconstraint); :}
  ;
  
Constraint oconstraint =
    artm_exp.a EQUALS artm_exp.b SEMICOLON   {: return new ConstraintEq(a,b); :}
  | artm_exp.a LEQ artm_exp.b SEMICOLON      {: return new ConstraintLeq(a,b); :}
  | artm_exp.a GEQ artm_exp.b SEMICOLON      {: return new ConstraintGeq(a,b); :}
  | FOR for_indices LOOP oconstraint* END_FOR SEMICOLON   
                                             {: return new ForClauseC(for_indices, oconstraint); :}
  ;

  