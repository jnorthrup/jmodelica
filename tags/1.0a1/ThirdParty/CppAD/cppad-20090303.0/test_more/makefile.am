# -----------------------------------------------------------------------------
# CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-08 Bradley M. Bell
#
# CppAD is distributed under multiple licenses. This distribution is under
# the terms of the 
#                     Common Public License Version 1.0.
#
# A copy of this license is included in the COPYING file of this distribution.
# Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
# -----------------------------------------------------------------------------
# automake input file
#
# CppAD pusts all it's preprocessor definitions in the cppad/config.h file
DEFS          =
#
if CppAD_ADOLC
ADOLC_SRC_FILES   = base_adolc.cpp 
ADOLC_INCLUDE = -I$(ADOLC_DIR)/include 
ADOLC_LIB     = -ladolc
ADOLC_LIB_DIR = -L$(ADOLC_DIR)/lib
ADOLC_FLAGS   = -DCPPAD_ADOLC_TEST
else
ADOLC_SRC_FILES   =
ADOLC_INCLUDE =
ADOLC_LIB     =
ADOLC_LIB_DIR =
ADOLC_FLAGS   =
endif
if CppAD_IPOPT_CPPAD
IPOPT_SRC_FILES   = ../ipopt_cppad/ipopt_cppad_nlp.cpp ipopt_cppad.cpp
IPOPT_EXTRA_FILES =
IPOPT_INCLUDE     = -I$(IPOPT_DIR)/include
IPOPT_LIB         = -lipopt $(FCLIBS) $(PTHREAD_LIB) $(DL_LIB)
IPOPT_LIB_DIR     = -L$(IPOPT_DIR)/lib
IPOPT_FLAGS       = -DCPPAD_IPOPT_CPPAD_TEST
else
IPOPT_SRC_FILES   = 
IPOPT_EXTRA_FILES = ipopt_cppad.cpp
IPOPT_INCLUDE     =
IPOPT_LIB         = 
endif
if CppAD_BOOSTVECTOR
BOOST_INCLUDE = -I$(BOOST_DIR)
else
BOOST_INCLUDE =
endif
#
# Microsoft project files
EXTRA_DIST        = test_more.sln test_more.vcproj test_one.sh.in \
	$(IPOPT_EXTRA_FILES)
#
noinst_PROGRAMS   = test_more
#
AM_CPPFLAGS       = -I. \
	-I$(top_srcdir) \
	$(BOOST_INCLUDE) \
	$(ADOLC_INCLUDE) \
	$(IPOPT_INCLUDE)
#
AM_CXXFLAGS       = -g $(CXX_FLAGS) $(ADOLC_FLAGS) $(IPOPT_FLAGS)
#
LDADD             = $(ADOLC_LIB) $(IPOPT_LIB)
AM_LDFLAGS        = $(ADOLC_LIB_DIR) $(IPOPT_LIB_DIR)
#
test_more_SOURCES  = \
	$(ADOLC_SRC_FILES) \
	$(IPOPT_SRC_FILES) \
	test_more.cpp \
	abs.cpp \
	acos.cpp \
	asin.cpp \
	add.cpp \
	add_eq.cpp \
	add_zero.cpp \
	atan.cpp \
	atan_2.cpp \
	compare.cpp \
	compare_change.cpp \
	cond_exp.cpp \
	cond_exp_ad.cpp \
	copy.cpp \
	cos.cpp \
	cosh.cpp \
	dbl_epsilon.cpp \
	div.cpp \
	div_eq.cpp \
	div_zero_one.cpp \
	erf.cpp \
	exp.cpp \
	for_hess.cpp \
	for_sparse_jac.cpp \
	forward.cpp \
	from_base.cpp \
	fun_check.cpp \
	jacobian.cpp \
	log.cpp \
	log_10.cpp \
	mul.cpp \
	mul_eq.cpp \
	mul_level.cpp \
	mul_zero_one.cpp \
	near_equal_ext.cpp \
	neg.cpp \
	ode_err_control.cpp \
	poly.cpp \
	pow.cpp \
	pow_int.cpp \
	romberg_one.cpp \
	rosen_34.cpp \
	runge_45.cpp \
	reverse.cpp \
	rev_sparse_hes.cpp \
	rev_sparse_jac.cpp \
	rev_two.cpp \
	simple_vector.cpp \
	sin.cpp \
	sin_cos.cpp \
	sinh.cpp \
	sparse_vec_ad.cpp \
	sqrt.cpp \
	std_math.cpp \
	sub.cpp \
	sub_eq.cpp \
	sub_zero.cpp \
	value.cpp \
	vec_ad.cpp \
	vec_ad_par.cpp \
	vec_unary.cpp 
