<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Speed Test Functions in Double</title>
<meta name="description" id="description" content="Speed Test Functions in Double"/>
<meta name="keywords" id="keywords" content=" speed test double "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_speed_double_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="sparse_evaluate.hpp.xml" target="_top">Prev</a>
</td><td><a href="double_det_minor.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>speed</option>
<option>speed_double</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Appendix-&gt;</option>
<option>Faq</option>
<option>speed</option>
<option>Theory</option>
<option>glossary</option>
<option>Bib</option>
<option>Bugs</option>
<option>WishList</option>
<option>whats_new</option>
<option>include_deprecated</option>
<option>License</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>speed-&gt;</option>
<option>speed_main</option>
<option>speed_utility</option>
<option>speed_double</option>
<option>speed_adolc</option>
<option>speed_cppad</option>
<option>speed_fadbad</option>
<option>speed_sacado</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>speed_double-&gt;</option>
<option>double_det_minor.cpp</option>
<option>double_det_lu.cpp</option>
<option>double_ode.cpp</option>
<option>double_poly.cpp</option>
<option>double_sparse_hessian.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Purpose</option>
<option>Speed</option>
<option>C++ Compiler Flags</option>
<option>Contents</option>
</select>
</td>
</tr></table><br/>







<center><b><big><big>Speed Test Functions in Double</big></big></b></center>
<br/>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br/>
CppAD has a set of speed tests for just calculating functions
(in double precision instead of an AD type).
This section links to the source code the function value speed tests.


<br/>
<br/>
<b><big><a name="Speed" id="Speed">Speed</a></big></b>
<br/>
To run these tests, you must include the
<code><font color="blue">--with-Speed</font></code> command line option during the
<a href="installunix.xml#Configure" target="_top"><span style='white-space: nowrap'>install&#xA0;configure</span></a>
 command. 
After the Unix install <a href="installunix.xml#make" target="_top"><span style='white-space: nowrap'>make</span></a>
 command, 
you can then run the function value speed tests 
with the following commands (relative to the distribution directory):
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;speed/double/double&#xA0;correct&#xA0;</span></font></code><i><span style='white-space: nowrap'>seed</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>where <i>seed</i> is a positive integer see for the
random number generator <a href="uniform_01.xml" target="_top"><span style='white-space: nowrap'>uniform_01</span></a>
.
This will check that the speed tests have been built correctly.
You can run the command
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;speed/double/double&#xA0;speed&#xA0;</span></font></code><i><span style='white-space: nowrap'>seed</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>to see the results of all the speed tests.
See <a href="speed_main.xml" target="_top"><span style='white-space: nowrap'>speed_main</span></a>
 for more options.

<br/>
<br/>
<b><big><a name="C++ Compiler Flags" id="C++ Compiler Flags">C++ Compiler Flags</a></big></b>
<br/>
The C++ compiler flags used to build the <code><font color="blue">double</font></code> speed tests are
<code><font color="blue">
<pre style='display:inline'> 
     AM_CXXFLAGS   = -O2 -DNDEBUG $(CXX_FLAGS) -DDOUBLE</pre>
</font></code>
where <code><font color="blue">CXX_FLAGS</font></code> is specified by the 
<a href="installunix.xml#Configure" target="_top"><span style='white-space: nowrap'>configure</span></a>
 command.

<br/>
<br/>
<b><big><a name="Contents" id="Contents">Contents</a></big></b>
<br/>
<div><a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
</div>
<hr/>Input File: omh/speed_double.omh

</body>
</html>
