// BEGIN SHORT COPYRIGHT
/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-06 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the 
                    Common Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */
// END SHORT COPYRIGHT

$begin ExpForward$$
$spell
	exp
	Taylor
$$

$index exp, forward theory$$
$index theory, exp forward$$
$index forward, exp theory$$

$section Exponential Function Forward Taylor Polynomial Theory$$

If $latex F(x) = \exp(x) $$ 
$latex \[
	1 * F^{(1)} (x) - 1 * F (x)  = 0
\] $$
and in the
$xref/
	ForwardTheory/ 
	Standard Math Functions/ 
	Differential Equation/
	standard math function differential equation/
	1
/$$,
$latex A(x) = 1$$,
$latex B(x) = 1$$,
and $latex D(x) = 0$$.
We use $latex a$$, $latex b$$, $latex d$$, 
and $latex z$$ to denote the 
Taylor coefficients for
$latex A [ X (t) ] $$, 
$latex B [ X (t) ]$$, 
$latex D [ X (t) ] $$,
and $latex F [ X(t) ] $$ respectively.
It now follows from the general
$xref/
	ForwardTheory/
	Standard Math Functions/
	Taylor Coefficients Recursion Formula/
	Taylor coefficients recursion formula/
	1
/$$
that for $latex j = 0 , 1, \ldots$$,
$latex \[
\begin{array}{rcl}
z^{(0)} & = & \exp ( x^{(0)} )
\\
e^{(j)} 
& = & d^{(j)} + \sum_{k=0}^{j} a^{(j-k)} * z^{(k)}
\\
& = & z^{(j)}
\\
z^{(j+1)} & = & \frac{1}{j+1} \frac{1}{ b^{(0)} } 
\left(
	\sum_{k=1}^{j+1} k x^{(k)} e^{(j+1-k)} 
	- \sum_{k=1}^j k z^{(k)}  b^{(j+1-k)} 
\right)
\\
& = & \frac{1}{j+1} 
	\sum_{k=1}^{j+1} k x^{(k)} z^{(j+1-k)} 
\end{array}
\] $$ 

$end
