
#    Copyright (C) 2009 Modelon AB
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3 as published 
#    by the Free Software Foundation, or optionally, under the terms of the 
#    Common Public License version 1.0 as published by IBM.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License, or the Common Public License, for more details.
#
#    You should have received copies of the GNU General Public License
#    and the Common Public License along with this program.  If not, 
#    see <http://www.gnu.org/licenses/> or 
#    <http://www.ibm.com/developerworks/library/os-cpl.html/> respectively.



# Name of the executable
EXE = vdp@EXEEXT@ 

# Name of shared library
SHARED = vdp@SHAREDEXT@

# Object files to be included in the executable
OBJS = vdp_main.@OBJEXT@ \
	vdp.@OBJEXT@

# Object files to be included in the shared library
SHAREDOBJS = vdp.@OBJEXT@

# Additional libraries
ADDLIBS =

# Additional flags for compilation (e.g., include flags)
ADDINCFLAGS =

# CHANGEME: Directory to the sources for the (example) problem definition
# files
SRCDIR = @srcdir@
VPATH = @srcdir@

##########################################################################
#  Usually, you don't have to change anything below.                     #
##########################################################################
# C++ Compiler command
CXX = @CXX@
CC = @GCC@

# C++ Compiler options
CXXFLAGS = @CXXFLAGS@ -DJMI_AD=JMI_AD_NONE
CXXLINKFLAGS = 

SHARED_LDFLAGS = @SHARED_LDFLAGS@

# Directory with header files
JMIINCDIR = @includedir@ 

# Directory with jmi.a
JMILIBDIR = @libdir@
exec_prefix = @exec_prefix@
prefix = @prefix@

# Include paths for compilation
LIBS = @jmilib@ @ipoptlib@ #@ADDLIBS@

# Include paths for compilation
INCL =  -I$(JMIINCDIR) -I@IPOPT_INC@

ifeq (@WITH_IPOPT@,true)
ifeq (@WITH_CPPAD@,true)
all: $(EXE) $(SHARED)
else
all:
endif
else
all:
endif
# Create the executable
.SUFFIXES: .cpp .c .o .obj

# Create the executable
$(EXE): $(OBJS)
ifeq (@WITH_IPOPT@,true)
ifeq (@WITH_CPPAD@,true)
	$(CXX) $(CXXLINKFLAGS) $(CXXFLAGS) -o $@ $(OBJS) $(LIBS)
endif
endif

# Create the shared library
$(SHARED): $(OBJS)
ifeq (@WITH_IPOPT@,true)
ifeq (@WITH_CPPAD@,true)
	$(CXX) $(SHARED_LDFLAGS) $(CXXLINKFLAGS) $(CXXFLAGS) -o $@ $(SHAREDOBJS) $(LIBS)
endif
endif

# Compile
.c.o:
	$(CC) $(CFLAGS) $(INCL) -c -o $@ $<

clean:
	rm -rf $(EXE) $(OBJS) $(SHARED)

