Build instructions for the JModelica project.

0. Requirements.

   In order to compile JModelica you will need a unix-like environment.
   For Windows, it is recommended to use the MingW distribution. In 
   addition 'ant' is needed to build the JastAdd/Java-based compiler
   front-end. NOTICE: The JModelic code tree, as well its dependencies,
   must be locaded in directories for which their absolute path does
   not contain spaces. [To be elaborated.]

1. Check out a working copy of JModelica:

    svn co https://svn.jmodelica.org/trunk JModelica

   Make sure that the full path to the directory where you check out
   JModelica does not contain any spaces..

2. Download CppAD from http://www.coin-or.org/CppAD. Unzip the 
   tar-ball and put in a directory. Again, make sure that the path to
   this directory does not contain any spaces. Note: You do not have to 
   build anything in the CppAD distribution in order to build JModelica.

3. Download Ipopt from https://projects.coin-or.org/Ipopt. Unzip the
   tar-ball and put in a directory that does not hold any spaces in its
   absolute path. Build the package according to its INSTALL file.
   Make sure to run 'make install'.

4. Run the configure script. It is recommended that you create a new
   directory in JModelica:

    cd JModelica
    mkdir build
    cd build
    ../configure --with-cppad=/path/to/cppad-dist \
      --with-ipopt=/path/to/ipopt-build-dir

   The arguments --with-cppad and --with-ipopt are optional. Notice,
   however, that if they are not give, only parts of the software
   will be built.

   You may want to give additional arguments to configure, type

    configure --help

   for information. By default, the installation directory (--prefix)
   is set to the current directory.

5. Build JModelica. In order to build, type

    make

   In order to install, type

    make install

   which will render the directories 'lib' and 'include' to be created
   and the corresponding libraries and directories and header files
   will be copied. 

   In order to build the examples, type
 
    make jmi-examples

   which will build executables and shared libraries for the examples
   in the 'JMI/examples' directory. Notice that both --with-cppad
   and --with-ipopt have to be provided in order to build the
   examples.

   In order to remove compiled executables and shared object files
   in the 'JMI/examples' directories, run

    make clean-jmi-examples

6. Generate documentation. The command

    make docs

   will generate documentation into the 'doc' directory.   

