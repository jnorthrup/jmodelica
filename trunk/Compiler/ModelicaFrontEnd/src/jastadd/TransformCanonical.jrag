
/**
 * This aspect contains transformations on the flattened model which converts
 * it into a canonical form.
 */
aspect TransformCanonical{
	
	public void FClass.transformCanonical() {
		genBindingEquations();
		addFDerivativeVariables();
		//flushCache(); // TODO: is this enough or should the entire tree be flushed?
 	}
		
	public void FClass.genBindingEquations() {
		for (FVariable fv : getFVariables()) {
			if (fv.hasBindingExp() && !fv.isParameter() && !fv.isConstant()) {
				FExp bexp = fv.getBindingExp();
				fv.setBindingExpOpt(new Opt());
				FEquation feq = new FEquation(new FIdUseExp(
						new FIdUseQualified("",fv.getFQName().fullCopy())),bexp);
				getFEquationBlock(0).addFAbstractEquation(feq);
			}
		}
		flushAllRecursive();
	}

	public void FClass.addFDerivativeVariables() {
		ArrayList<FDerivativeVariable> l = new ArrayList<FDerivativeVariable>();
		for (FVariable fv : differentiatedRealVariables()) {
			l.add(new FDerivativeVariable((FVisibilityType)fv.getFVisibilityType().fullCopy(),
					(FTypePrefixOther)fv.getFTypePrefixOther().fullCopy(),
					new Opt(),
					new List(),
					new Opt(),
					new Opt(),
					fv.getFQName().fullCopy()));
		}
		for (FVariable fv : l) {
			addFVariable(fv);
		}
		root().flushAllRecursive();
	}

	public void ASTNode.flushAll() {
		flushCache();
		flushCollectionCache();
	}

	public void ASTNode.flushAllRecursive() {
		flushAll();
		for (int i=0;i<getNumChild();i++) {
			getChild(i).flushAllRecursive();
		}
	}

	
}

